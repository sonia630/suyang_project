<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.o2o.massage.dao.mapper.SrvProviderSrvRelMapper">
  <resultMap id="BaseResultMap" type="com.o2o.massage.dao.entity.SrvProviderSrvRel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="provider_user_id" jdbcType="VARCHAR" property="providerUserId" />
    <result column="service_id" jdbcType="VARCHAR" property="serviceId" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="sort_order" jdbcType="INTEGER" property="sortOrder" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="billing_type" jdbcType="TINYINT" property="billingType" />
    <result column="estimated_time" jdbcType="INTEGER" property="estimatedTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    `id`, `provider_user_id`, `service_id`, `price`, `sort_order`, `status`, `create_time`, 
    `create_by`, `update_time`, `update_by`, `remarks`, `billing_type`, `estimated_time`
  </sql>
  <select id="selectByExample" parameterType="com.o2o.massage.dao.entity.SrvProviderSrvRelExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from srv_provider_srv_rel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from srv_provider_srv_rel
    where `id` = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="com.o2o.massage.dao.entity.SrvProviderSrvRel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into srv_provider_srv_rel (`id`, `provider_user_id`, `service_id`, 
      `price`, `sort_order`, `status`, 
      `create_time`, `create_by`, `update_time`, 
      `update_by`, `remarks`, `billing_type`, 
      `estimated_time`)
    values (#{id,jdbcType=BIGINT}, #{providerUserId,jdbcType=VARCHAR}, #{serviceId,jdbcType=VARCHAR}, 
      #{price,jdbcType=DECIMAL}, #{sortOrder,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, #{billingType,jdbcType=TINYINT}, 
      #{estimatedTime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.o2o.massage.dao.entity.SrvProviderSrvRel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into srv_provider_srv_rel
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        `id`,
      </if>
      <if test="providerUserId != null">
        `provider_user_id`,
      </if>
      <if test="serviceId != null">
        `service_id`,
      </if>
      <if test="price != null">
        `price`,
      </if>
      <if test="sortOrder != null">
        `sort_order`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createTime != null">
        `create_time`,
      </if>
      <if test="createBy != null">
        `create_by`,
      </if>
      <if test="updateTime != null">
        `update_time`,
      </if>
      <if test="updateBy != null">
        `update_by`,
      </if>
      <if test="remarks != null">
        `remarks`,
      </if>
      <if test="billingType != null">
        `billing_type`,
      </if>
      <if test="estimatedTime != null">
        `estimated_time`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="providerUserId != null">
        #{providerUserId,jdbcType=VARCHAR},
      </if>
      <if test="serviceId != null">
        #{serviceId,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="sortOrder != null">
        #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="billingType != null">
        #{billingType,jdbcType=TINYINT},
      </if>
      <if test="estimatedTime != null">
        #{estimatedTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.o2o.massage.dao.entity.SrvProviderSrvRelExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from srv_provider_srv_rel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update srv_provider_srv_rel
    <set>
      <if test="record.id != null">
        `id` = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.providerUserId != null">
        `provider_user_id` = #{record.providerUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceId != null">
        `service_id` = #{record.serviceId,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        `price` = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.sortOrder != null">
        `sort_order` = #{record.sortOrder,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        `create_time` = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        `create_by` = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        `update_time` = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        `update_by` = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null">
        `remarks` = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.billingType != null">
        `billing_type` = #{record.billingType,jdbcType=TINYINT},
      </if>
      <if test="record.estimatedTime != null">
        `estimated_time` = #{record.estimatedTime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update srv_provider_srv_rel
    set `id` = #{record.id,jdbcType=BIGINT},
      `provider_user_id` = #{record.providerUserId,jdbcType=VARCHAR},
      `service_id` = #{record.serviceId,jdbcType=VARCHAR},
      `price` = #{record.price,jdbcType=DECIMAL},
      `sort_order` = #{record.sortOrder,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=TINYINT},
      `create_time` = #{record.createTime,jdbcType=TIMESTAMP},
      `create_by` = #{record.createBy,jdbcType=VARCHAR},
      `update_time` = #{record.updateTime,jdbcType=TIMESTAMP},
      `update_by` = #{record.updateBy,jdbcType=VARCHAR},
      `remarks` = #{record.remarks,jdbcType=VARCHAR},
      `billing_type` = #{record.billingType,jdbcType=TINYINT},
      `estimated_time` = #{record.estimatedTime,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.o2o.massage.dao.entity.SrvProviderSrvRel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update srv_provider_srv_rel
    <set>
      <if test="providerUserId != null">
        `provider_user_id` = #{providerUserId,jdbcType=VARCHAR},
      </if>
      <if test="serviceId != null">
        `service_id` = #{serviceId,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        `price` = #{price,jdbcType=DECIMAL},
      </if>
      <if test="sortOrder != null">
        `sort_order` = #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        `create_time` = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        `create_by` = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        `update_time` = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        `update_by` = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        `remarks` = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="billingType != null">
        `billing_type` = #{billingType,jdbcType=TINYINT},
      </if>
      <if test="estimatedTime != null">
        `estimated_time` = #{estimatedTime,jdbcType=INTEGER},
      </if>
    </set>
    where `id` = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.o2o.massage.dao.entity.SrvProviderSrvRel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update srv_provider_srv_rel
    set `provider_user_id` = #{providerUserId,jdbcType=VARCHAR},
      `service_id` = #{serviceId,jdbcType=VARCHAR},
      `price` = #{price,jdbcType=DECIMAL},
      `sort_order` = #{sortOrder,jdbcType=INTEGER},
      `status` = #{status,jdbcType=TINYINT},
      `create_time` = #{createTime,jdbcType=TIMESTAMP},
      `create_by` = #{createBy,jdbcType=VARCHAR},
      `update_time` = #{updateTime,jdbcType=TIMESTAMP},
      `update_by` = #{updateBy,jdbcType=VARCHAR},
      `remarks` = #{remarks,jdbcType=VARCHAR},
      `billing_type` = #{billingType,jdbcType=TINYINT},
      `estimated_time` = #{estimatedTime,jdbcType=INTEGER}
    where `id` = #{id,jdbcType=BIGINT}
  </update>
</mapper>